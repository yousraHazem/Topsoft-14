class GroupsController < ApplicationController
  before_action :set_group, only: [:show, :edit, :update, :destroy]
  #Start autogenerated methods
  # GET /groups
  # GET /groups.json
  def index
    @groups = Group.all
  end

  # GET /groups/1
  # GET /groups/1.json
  def show
  end

  # GET /groups/new
  def new
    # @group = Group.new
  end

  # GET /groups/1/edit
  def edit
  end

<<<<<<< HEAD
  # Method for creating a new group
  # input : group_params hash
  # Insertion of a new record in table groups
  # The function takes a unique username, and a group_name 
  # and description and creates a new group by creating and inserting
  # a new record in table groups
  # Author: Nouran T. Attia
=======
  # Method for creating a new group.
  # Input : group_params hash .
  # Insertion of a new record in table groups .
  # The function takes a unique username, and a group_name and 
  # creates a new group by creating and inserting a 
  # new record in table groups.
  # Complexity: O(1).
  # Author: Nouran T. Attia .
>>>>>>> f3b505a52bb742de7d393bd6ca709bee2e52a2cd
  # POST /groups
  # POST /groups.json
  def create
    if signed_in?
<<<<<<< HEAD
      #if current_user.username = 
        
      #end
=======
>>>>>>> f3b505a52bb742de7d393bd6ca709bee2e52a2cd
      @group = Group.new(group_params)
      @group.owner = current_user.username
      respond_to do |format|
        if @group.save
          format.html { redirect_to @group, notice: 
            'Group was successfully created.' }
          format.json { render action: 'show', status: :created,
            location: @group }
        else
          format.html { render action: 'new' }
          format.json { render json: @group.errors,
            status: :unprocessable_entity }
        end
      end
<<<<<<< HEAD
=======
    else
      # No one signed in
      redirect_to session_path :new
>>>>>>> f3b505a52bb742de7d393bd6ca709bee2e52a2cd
    end
  end

  # PATCH/PUT /groups/1
  # PATCH/PUT /groups/1.json
  def update
    respond_to do |format|
      if @group.update(group_params)
        format.html { redirect_to @group, notice:
          'Group was successfully updated.' }
        format.json { head :no_content }
      else
        format.html { render action: 'edit' }
        format.json { render json: @group.errors,
          status: :unprocessable_entity }
      end
    end
  end

  # DELETE /groups/1
  # DELETE /groups/1.json
  def destroy
    @group.destroy
    respond_to do |format|
      format.html { redirect_to groups_url }
      format.json { head :no_content }
    end
  end

  private
    # Use callbacks to share common setup or constraints between actions.
    def set_group
      @group = Group.find(params[:id])
    end

    

    # Never trust parameters from the scary internet,
    # only allow the white list through.
    def group_params
      params.require(:group).permit(:group_name, :privacy,
        :group_description)
    end

    # End of autogenerated methods
  #end
end
