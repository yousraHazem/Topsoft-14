# This is Photo Model that is used to upload Photos into the website
# The uploading process mostly happens with usage of CarrierWave Gem.
# Attributes : * description - string.
#              * image - string (Name of the image file on the machine).
#              * remote_image_url - string 
#              (The url of the image web => HAS TO BE NAMED LIKE THIS).
#              * id - integer (Auto-increment key generated by the database).
# Constrains : * A description to the photo should be present.
#            : * A local image should present OR an external hyperLink.
#            : * The image file should be of extension (jpg jpeg gif png).
# and this ensured in ImageUploader class using def extension_white_list.
# Author : Hussien M. Eloy.
class Photo < ActiveRecord::Base
  mount_uploader :image, ImageUploader      
  validates :description, :image, presence: true


  # This method is used to Allow accessing model attributes As Rails 4 does
  # not support "attr_accessible" keyword.
  # Parameters : None.
  # Returns : None.
  # Approach : The method is just making The model's column accessible.
  # Author : Hussien M. Eloy.
  def photo_params
    params.require(:photo).permit(:description, :image, :remote_image_url)
  end

  # This method returns the value of the photo id.
  # Parameteres : None.
  # Returns : id - integer.
  # Approach : Just selecting the value of the current photo 
  # id from the database.
  # Author : Hussien M. Eloy.
  def get_id
    self[:id]
  end

  # This method returns the photo's description.
  # Parameters : None.
  # Returns : description - string.
  # Approach : Just selecting the description 
  # of the current photo from the database.
  # Author : Hussien M. Eloy.
  def get_description
    self[:description]
  end

  # This method edits the description of the photo.
  # Parameters : description - string.
  # Returns : None.
  # Approach : It just updates the description column in the current
  # photo recored by the value of the parameter.
  # Author : Hussien M. Eloy.
  def edit_description(description)
    self[:description] = description
  end
end
