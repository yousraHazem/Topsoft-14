# This is Song Model that is used to upload songs into the website
# The uploading process mostly happens with usage of CarrierWave Gem.
# The converting of songs is done through streamio-ffmpeg Gem
# and finally playing the videos is through html 5 player.
# Attributes : * name - string
#              * file - string (Name of the song file on the machine).
#              * id - integer (Auto-increment key generated by the database).
#              * real_file - string (The real .mp3 file that used
#                to play the song).
# Constrains : * A name to the photo should be present.
#            : * A local track should be present.
#            : * The video file should be of extension (3gp avi amr m4a 
#                mp3 ogg wav wma)and this ensured in SongUploader class
#                using def extension_white_list. 
class Song < ActiveRecord::Base
  require 'rubygems'
  require 'streamio-ffmpeg'
  validates :name, :file, presence: true
  mount_uploader :file, SongUploader

  # This method is used to Allow accessing model attributes As Rails 4 does
  # not support "attr_accessible" keyword.
  # Parameters : None.
  # Returns : None.
  # Approach : The method is just making The model's column accessible.
  # Author : Hussien M. Eloy.
  def song_params
    params.require(:song).permit(:name, :file, :real_file)
  end

  # This method is used to convert the song
  # entered by the user.
  # Parameters : None.
  # Returns : None.
  # Approach : The method use ffmpeg gem in order
  # to convert the song that give by the user
  # that is suffixed by the extension mentioned above,
  # then it would convert it to .mp3 extension
  # that is used in html 5 audio player and updates the
  # real_file value with the new file that is passed
  # to 'show' view,and finally save the record to validate the changes.
  # Author : Hussien M. Eloy. 
  def convert
    command = "ffmpeg -y -i #{Rails.root}/public/uploads/song/file"\
      "/#{self[:id]}/#{self[:file]} #{Rails.root}/public/uploads/song"\
        "/file/#{self[:id]}/#{self[:id]}.mp3"
      system(command)
      self[:real_file] = "/uploads/song/file/#{self[:id]}/#{self[:id]}.mp3"
      self.save      
  end
end
